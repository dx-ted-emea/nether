{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_GRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "hiveScriptStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name where the hive script is stored."
      }
    },
    "hiveScriptStorageAccountKey": {
      "type": "string",
      "metadata": {
        "description": "Storage account key of blob storage where the hive script is stored."
      }
    },
    "hiveScriptFilePath": {
      "type": "string",
      "metadata": {
        "description": "File path of hive script."
      }
    },
    "sqlServerAdminName": {
      "type": "string",
      "metadata": {
        "description": "Administrator name to the Azure SQL Server"
      }
    },
    "sqlServerAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "Administrator password to the Azure SQL Server"
      }
    },
    "dbnameCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "dbnameEdition": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "dbnameRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "S0"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "stgApiVersion": "2015-06-15",
    "ehApiVersion": "2015-08-01",
    "asaApiVersion": "2015-09-01",
    "sqlApiVersion": "2014-04-01",
    "dfApiVersion": "2015-10-01",
    "uniqueIdentifier": "[uniqueString(resourceGroup().id)]",
    "storageAccountName": "[concat(resourceGroup().name, variables('uniqueIdentifier'))]",
    "namespaceName": "[concat(resourceGroup().name, variables('uniqueIdentifier'), '-ns')]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('namespaceName'), variables('defaultSASKeyName'))]",
    "asaCCUJobName": "ccu",
    "asaCCUJobQuery": "With concurrentusers as (\r\n\tSelect\r\n\t\tCount(*) as numUsers,\r\n\t\tSystem.timestamp as time\r\n\tFrom\r\n\t\tInput timestamp by ClientUtc\r\n\tWhere\r\n\t\tEvent = 'heartbeat'\r\n\t\tor Event = 'session-start'\r\n\tGroup By\r\n\t\ttumblingwindow(second, 10), time\r\n)\r\nSelect * into PBISink from concurrentusers\r\nSelect * into BlobSink from concurrentusers",
    "asaCCUConsumerGroupName": "asaCCU",
    "asaCCUContainerName": "ccus",
    "asaRawDataContainerName": "rawdata",
    "asaRawJobName": "rawdata",
    "asaRawJobQuery": "SELECT\r\nEvent,\r\n\tVersion,\r\n\tClientUtc,\r\n\tYear(ClientUtc) as ClientYear,\r\n\tMonth(ClientUtc) as ClientMonth,\r\n\tDay(ClientUtc) as ClientDay,\r\n\tDatepart(hh, ClientUtc) as ClientHour,\r\n\tGamertag\r\nINTO\r\n\tOutputBlob\r\nFROM\r\n\tInput",
    "asaRawConsumerGroupName": "asaRaw",
    "sqlServerName": "[concat(resourceGroup().name, variables('uniqueIdentifier'))]",
    "sqlDBName": "gamemetrics",
    "blobContainer": "gamedata",
    "blobRawEventsFolder": "rawevents",
    "blobDAUFolder": "dailyactiveusers",
    "blobMAUFolder": "monthlyactiveusers",
    "blobDAUcsvFolder": "dailyactiveusersCsv",
    "blobMAUcsvFolder": "monthlyactiveusersCsv",
    "dfSqlDAUtable": "DailyActiveUsers",
    "dfSqlMAUtable": "MonthlyActiveUsers",
    "dataFactoryName": "[concat(resourceGroup().name, variables('uniqueIdentifier'))]",
    "dfStorageLinkedServiceName": "AzureStorageLinkedService",
    "dfHiveStorageLinkedServiceName": "AzureHiveStorageLinkedService",
    "dfSqlLinkedServiceName": "SQLServerLinkedService",
    "dfHDIOnDemandLinkedServiceName": "HDInsightOnDemandLinkedService",
    "dfDatasetRawDataName": "rawData",
    "dfDatasetDAUName": "dailyActiveUsers",
    "dfDatasetMAUName": "monthlyActiveUsers",
    "dfDatasetDAUCsvName": "dailyActiveUsersCsv",
    "dfDatasetMAUCsvName": "monthlyActiveUsersCsv",
    "dfDatasetDAUsqlName": "dailyActiveUsersSQL",
    "dfDatasetMAUsqlName": "monthlyActiveUsersSQL",
    "dfHdiPipelineName": "calcKPIs",
    "dfCopyDAUPipelineName": "copyDAU",
    "dfCopyMAUPipelineName": "copyMAU",
    "dfCopyDAUtoSQL": "copyDAUtoSQL",
    "dfCopyMAUtoSQL": "copyMAUtoSQL",
    "dfFrequency": "Hour"
  },
  "resources": [
    {
      "apiVersion": "[variables('stgApiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('ehApiVersion')]",
      "name": "[variables('namespaceName')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "resources": [
        {
          "apiVersion": "[variables('ehApiVersion')]",
          "name": "[parameters('eventHubName')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('namespaceName'))]"
          ],
          "properties": {
            "path": "[parameters('eventHubName')]"
          },
          "resources": [
            {
              "apiVersion": "[variables('ehApiVersion')]",
              "name": "[variables('asaCCUConsumerGroupName')]",
              "type": "ConsumerGroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ],
              "properties": {}
            },
            {
              "apiVersion": "[variables('ehApiVersion')]",
              "name": "[variables('asaRawConsumerGroupName')]",
              "type": "ConsumerGroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ]
            }
          ]
        }
      ]
    },
    {
      "apiVersion": "[variables('asaApiVersion')]",
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "name": "[variables('asaRawJobName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "outputStartMode": "LastOutputEventTime",
        "inputs": [
          {
            "name": "Input",
            "properties": {
              "type": "stream",
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "eventHubName": "[parameters('eventHubName')]",
                  "serviceBusNamespace": "[variables('namespaceName')]",
                  "sharedAccessPolicyName": "[variables('defaultSASKeyName')]",
                  "sharedAccessPolicyKey": "[listkeys(variables('authRuleResourceId'), variables('ehApiVersion')).primaryKey]",
                  "consumerGroupName": "[variables('asaRawConsumerGroupName')]"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "[variables('asaRawJobName')]",
          "properties": {
            "streamingUnits": 1,
            "query": "[variables('asaRawJobQuery')]"
          }
        },
        "outputs": [
          {
            "name": "OutputBlob",
            "properties": {
              "serialization": {
                "type": "CSV",
                "properties": {
                  "fieldDelimiter": ",",
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[variables('storageAccountName')]",
                      "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').key1]"
                    }
                  ],
                  "container": "[variables('blobContainer')]",
                  "pathPattern": "[concat(variables('blobRawEventsFolder'), '/{date}')]",
                  "dateFormat": "yyyy/MM/dd"
                }
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "apiVersion": "[variables('asaApiVersion')]",
      "comments": "Azure stream analytics job for calculating the concurrent users",
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "name": "[variables('asaCCUJobName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "outputStartMode": "LastOutputEventTime",
        "inputs": [
          {
            "name": "Input",
            "properties": {
              "type": "stream",
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "eventHubName": "[parameters('eventHubName')]",
                  "serviceBusNamespace": "[variables('namespaceName')]",
                  "sharedAccessPolicyName": "[variables('defaultSASKeyName')]",
                  "sharedAccessPolicyKey": "[listkeys(variables('authRuleResourceId'), variables('ehApiVersion')).primaryKey]",
                  "consumerGroupName": "[variables('asaCCUConsumerGroupName')]"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "[variables('asaCCUJobName')]",
          "properties": {
            "streamingUnits": 1,
            "query": "[variables('asaCCUJobQuery')]"
          }
        },
        "outputs": [
          {
            "name": "BlobSink",
            "properties": {
              "serialization": {
                "type": "CSV",
                "properties": {
                  "fieldDelimiter": ",",
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[variables('storageAccountName')]",
                      "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').key1]"
                    }
                  ],
                  "container": "[variables('asaCCUContainerName')]",
                  "pathPattern": "sessions/date={date}",
                  "dateFormat": "yyyy-MM-dd"
                }
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('sqlApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdminName')]",
        "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('sqlDBName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "[variables('sqlApiVersion')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "collation": "[parameters('dbnameCollation')]",
            "edition": "[parameters('dbnameEdition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('dbnameRequestedServiceObjectiveName')]"
          }
        },
        {
          "name": "AllowAllWindowsAzureIPs",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "[variables('sqlApiVersion')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "endIpAddress": "255.255.255.255",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "name": "[variables('dataFactoryName')]",
      "apiVersion": "[variables('dfApiVersion')]",
      "type": "Microsoft.DataFactory/datafactories",
      "location": "[resourceGroup().location]",
      "resources": [
        {
          "type": "linkedservices",
          "name": "[variables('dfStorageLinkedServiceName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureStorage",
            "description": "Azure Storage linked service",
            "typeProperties": {
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('stgApiVersion')).key1)]"
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('dfHiveStorageLinkedServiceName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureStorage",
            "description": "Azure Storage that contains the Hive script - to be a SAS linked service later",
            "typeProperties": {
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('hiveScriptStorageAccountName'),';AccountKey=', parameters('hiveScriptStorageAccountKey'))]"
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('dfSqlLinkedServiceName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/databases/', variables('sqlDBName'))]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureSqlDatabase",
            "description": "Azure SQL Server Database to store key game metrics, e.g. DAU, MAU",
            "typeProperties": {
              "connectionString": "[concat('Server=tcp:', variables('sqlServerName'),'.database.windows.net,1433;Database=', variables('sqlDBName'), ';User ID=',parameters('sqlServerAdminName'),';Password=',parameters('sqlServerAdminPassword'),';Trusted_Connection=False;Encrypt=True;Connection Timeout=30')]"
            }
          }
        },
        {
          "type": "linkedservices",
          "name": "[variables('dfHDIOnDemandLinkedServiceName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]",
            "[variables('dfSqlLinkedServiceName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "HDInsightOnDemand",
            "typeProperties": {
              "clusterSize": 2,
              "version": "3.2",
              "timeToLive": "00:30:00",
              "osType": "linux",
              "linkedServiceName": "[variables('dfStorageLinkedServiceName')]",
              "hcatalogLinkedServiceName": "[variables('dfSqlLinkedServiceName')]"
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('dfDatasetRawDataName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureBlob",
            "linkedServiceName": "[variables('dfStorageLinkedServiceName')]",
            "typeProperties": {
              "folderPath": "[concat(variables('blobContainer'), '/', variables('blobRawEventsFolder'))]",
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ","
              }
            },
            "availability": {
              "frequency": "[variables('dfFrequency')]",
              "interval": 1
            },
            "external": true
          }
        },
        {
          "type": "datasets",
          "name": "[variables('dfDatasetDAUName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureBlob",
            "linkedServiceName": "[variables('dfStorageLinkedServiceName')]",
            "typeProperties": {
              "fileName": "000000_0",
              "folderPath": "[concat(variables('blobContainer'), '/', variables('blobDAUFolder'))]",
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "\n"
              }
            },
            "availability": {
              "frequency": "[variables('dfFrequency')]",
              "interval": 1
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('dfDatasetMAUName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureBlob",
            "linkedServiceName": "[variables('dfStorageLinkedServiceName')]",
            "typeProperties": {
              "fileName": "000000_0",
              "folderPath": "[concat(variables('blobContainer'), '/', variables('blobMAUFolder'))]",
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "\n"
              }
            },
            "availability": {
              "frequency": "[variables('dfFrequency')]",
              "interval": 1
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('dfDatasetDAUCsvName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureBlob",
            "linkedServiceName": "[variables('dfStorageLinkedServiceName')]",
            "typeProperties": {
              "fileName": "000000_0.csv",
              "folderPath": "[concat(variables('blobContainer'), '/', variables('blobDAUcsvFolder'))]",
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "\n"
              }
            },
            "availability": {
              "frequency": "[variables('dfFrequency')]",
              "interval": 1
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('dfDatasetMAUCsvName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "type": "AzureBlob",
            "linkedServiceName": "[variables('dfStorageLinkedServiceName')]",
            "typeProperties": {
              "fileName": "000000_0.csv",
              "folderPath": "[concat(variables('blobContainer'), '/', variables('blobMAUcsvFolder'))]",
              "format": {
                "type": "TextFormat",
                "columnDelimiter": ",",
                "rowDelimiter": "\n"
              }
            },
            "availability": {
              "frequency": "[variables('dfFrequency')]",
              "interval": 1
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('dfDatasetDAUsqlName')]",
          "apiVersion": "[variables('dfApiVersion')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfSqlLinkedServiceName')]"
          ],
          "properties": {
            "description": "",
            "type": "AzureSqlTable",
            "linkedServiceName": "[variables('dfSqlLinkedServiceName')]",
            "structure": [],
            "typeProperties": {
              "tableName": "[variables('dfSqlDAUtable')]"
            },
            "availability": {
              "frequency": "[variables('dfFrequency')]",
              "interval": 1
            }
          }
        },
        {
          "type": "datasets",
          "name": "[variables('dfDatasetMAUsqlName')]",
          "apiVersion": "[variables('dfApiVersion')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfSqlLinkedServiceName')]"
          ],
          "properties": {
            "description": "",
            "type": "AzureSqlTable",
            "linkedServiceName": "[variables('dfSqlLinkedServiceName')]",
            "structure": [],
            "typeProperties": {
              "tableName": "[variables('dfSqlMAUtable')]"
            },
            "availability": {
              "frequency": "[variables('dfFrequency')]",
              "interval": 1
            }
          }
        },
        {
          "type": "datapipelines",
          "name": "[variables('dfHdiPipelineName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]",
            "[variables('dfHiveStorageLinkedServiceName')]",
            "[variables('dfHDIOnDemandLinkedServiceName')]",
            "[variables('dfDatasetRawDataName')]",
            "[variables('dfDatasetDAUName')]",
            "[variables('dfDatasetMAUName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "description": "Pipeline that transforms data using Hive script.",
            "activities": [
              {
                "type": "HDInsightHive",
                "typeProperties": {
                  "scriptPath": "[parameters('hiveScriptFilePath')]",
                  "scriptLinkedService": "[variables('dfHiveStorageLinkedServiceName')]",
                  "defines": {
                    "raweventsloc": "[concat('wasbs://', variables('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/', variables('blobRawEventsFolder'), '/')]",
                    "year": "$$Text.Format('{0:yyyy}',WindowStart)",
                    "month": "$$Text.Format('{0:MM}',WindowStart)",
                    "day": "$$Text.Format('{0:%d}', Date.AddDays(WindowStart, -1))",
                    "dau": "[concat('wasbs://', variables('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/', variables('blobDAUFolder'))]",
                    "mau": "[concat('wasbs://', variables('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/', variables('blobMAUFolder'))]"
                  }
                },
                "inputs": [
                  {
                    "name": "[variables('dfDatasetRawDataName')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "[variables('dfDatasetDAUName')]"
                  },
                  {
                    "name": "[variables('dfDatasetMAUName')]"
                  }
                ],
                "policy": {
                  "concurrency": 1,
                  "retry": 2
                },
                "scheduler": {
                  "frequency": "[variables('dfFrequency')]",
                  "interval": 1
                },
                "name": "RunKPIActivity",
                "linkedServiceName": "[variables('dfHDIOnDemandLinkedServiceName')]"
              }
            ],
            "start": "2016-11-06T00:16:00Z",
            "end": "2017-11-06T00:17:00Z",
            "isPaused": false
          }
        },
        {
          "type": "datapipelines",
          "name": "[variables('dfCopyDAUPipelineName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]",
            "[variables('dfDatasetDAUName')]",
            "[variables('dfDatasetDAUCsvName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "description": "Pipeline to copy the daily active users hive table into a csv file.",
            "activities": [
              {
                "type": "Copy",
                "typeProperties": {
                  "source": {
                    "type": "BlobSource"
                  },
                  "sink": {
                    "type": "BlobSink",
                    "writeBatchSize": 0,
                    "writeBatchTimeout": "00:00:00"
                  }
                },
                "inputs": [
                  {
                    "name": "[variables('dfDatasetDAUName')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "[variables('dfDatasetDAUCsvName')]"
                  }
                ],
                "policy": {
                  "timeout": "01:00:00",
                  "executionPriorityOrder": "OldestFirst",
                  "concurrency": 1,
                  "retry": 1
                },
                "scheduler": {
                  "frequency": "[variables('dfFrequency')]",
                  "interval": 1
                },
                "name": "RenameHiveOutput2CSVdauActivity"
              }
            ],
            "start": "2016-11-06T00:16:00Z",
            "end": "2017-11-06T00:17:00Z",
            "isPaused": false
          }
        },
        {
          "type": "datapipelines",
          "name": "[variables('dfCopyMAUPipelineName')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]",
            "[variables('dfDatasetMAUName')]",
            "[variables('dfDatasetMAUCsvName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "description": "Pipeline to copy the monthly active users hive table into a csv file.",
            "activities": [
              {
                "type": "Copy",
                "typeProperties": {
                  "source": {
                    "type": "BlobSource"
                  },
                  "sink": {
                    "type": "BlobSink",
                    "writeBatchSize": 0,
                    "writeBatchTimeout": "00:00:00"
                  }
                },
                "inputs": [
                  {
                    "name": "[variables('dfDatasetMAUName')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "[variables('dfDatasetMAUCsvName')]"
                  }
                ],
                "policy": {
                  "timeout": "01:00:00",
                  "executionPriorityOrder": "OldestFirst",
                  "concurrency": 1,
                  "retry": 1
                },
                "scheduler": {
                  "frequency": "[variables('dfFrequency')]",
                  "interval": 1
                },
                "name": "RenameHiveOutput2CSVmauActivity"
              }
            ],
            "start": "2016-11-06T00:16:00Z",
            "end": "2017-11-06T00:17:00Z",
            "isPaused": false
          }
        },
        {
          "type": "datapipelines",
          "name": "[variables('dfCopyDAUtoSQL')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]",
            "[variables('dfDatasetDAUCsvName')]",
            "[variables('dfDatasetDAUsqlName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "description": "Pipeline to copy the daily active users csv file into Azure SQL DB",
            "activities": [
              {
                "type": "Copy",
                "typeProperties": {
                  "source": {
                    "type": "BlobSource"
                  },
                  "sink": {
                    "type": "SqlSink",
                    "sqlWriterCleanupScript": "$$Text.Format('DELETE FROM DailyActiveUsers WHERE Year = 2016 AND Month = 12 AND Day < \\'{0:HH}\\'', WindowStart)"
                  }
                },
                "inputs": [
                  {
                    "name": "[variables('dfDatasetDAUCsvName')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "[variables('dfDatasetDAUsqlName')]"
                  }
                ],
                "policy": {
                  "concurrency": 1,
                  "executionPriorityOrder": "OldestFirst",
                  "retry": 0,
                  "timeout": "01:00:00"
                },
                "scheduler": {
                  "frequency": "[variables('dfFrequency')]",
                  "interval": 1
                },
                "name": "DAUBlobtoSQL"
              }
            ],
            "start": "2016-11-06T00:16:00Z",
            "end": "2017-11-06T00:17:00Z",
            "isPaused": false
          }
        },
        {
          "type": "datapipelines",
          "name": "[variables('dfCopyMAUtoSQL')]",
          "dependsOn": [
            "[variables('dataFactoryName')]",
            "[variables('dfStorageLinkedServiceName')]",
            "[variables('dfDatasetMAUCsvName')]",
            "[variables('dfDatasetMAUsqlName')]"
          ],
          "apiVersion": "[variables('dfApiVersion')]",
          "properties": {
            "description": "Pipeline to copy the monthly active users csv file into Azure SQL DB",
            "activities": [
              {
                "type": "Copy",
                "typeProperties": {
                  "source": {
                    "type": "BlobSource"
                  },
                  "sink": {
                    "type": "SqlSink",
                    "sqlWriterCleanupScript": "$$Text.Format('DELETE FROM MonthlyActiveUsers WHERE Year = 2016 AND Month = 12')"
                  }
                },
                "inputs": [
                  {
                    "name": "[variables('dfDatasetMAUCsvName')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "[variables('dfDatasetMAUsqlName')]"
                  }
                ],
                "policy": {
                  "concurrency": 1,
                  "executionPriorityOrder": "OldestFirst",
                  "retry": 0,
                  "timeout": "01:00:00"
                },
                "scheduler": {
                  "frequency": "[variables('dfFrequency')]",
                  "interval": 1
                },
                "name": "MAUBlobtoSQL"
              }
            ],
            "start": "2016-11-06T00:16:00Z",
            "end": "2017-11-06T00:17:00Z",
            "isPaused": false
          }
        }
      ]
    }
  ],
  "outputs": {
    "NamespaceConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), variables('ehApiVersion')).primaryConnectionString]"
    },
    "SharedAccessPolicyPrimaryKey": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), variables('ehApiVersion')).primaryKey]"
    }
  }
}